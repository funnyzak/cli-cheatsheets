name: Release

on:
  push:
    paths:
      - 'cheatsheets/**'
      - 'cheatsheet.sh'
    branches: [main, dev, dev2, dev3, devops]
  workflow_dispatch:

jobs:
  release-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up environment variables
        id: vars
        run: |
          _date_suffix=$(date +%y%m%d%H%M)
          echo "PROJECT_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV
          echo "DATE_SUFFIX=$_date_suffix" >> $GITHUB_ENV
            # Set release name based on event type
            if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/* ]]; then
              echo "RELEASE_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            else
              echo "RELEASE_NAME=${_date_suffix}" >> $GITHUB_ENV
            fi
      - name: Create distribution package
        run: |
          mkdir -p dist
          tar -czf "dist/${PROJECT_NAME}-${DATE_SUFFIX}.tar.gz" cheatsheets cheatsheet.sh
      
      - name: Create GitHub Release By Tag
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'push'
        with:
          name: "${{ env.RELEASE_NAME }}"
          tag_name: "${{ env.RELEASE_NAME }}"
          files: dist/*
          draft: false
          generate_release_notes: true
          body: "Release created on ${{ env.DATE_SUFFIX }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release By Branch
        if: startsWith(github.ref, 'refs/heads/') || github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating release for branch..."
          gh release create "${{ env.RELEASE_NAME }}" dist/* --title "${{ env.RELEASE_NAME }}" --notes "Release created on ${{ env.DATE_SUFFIX }}" || {
            echo "::warning::Failed to create release, it might already exist. Attempting to update..."
            gh release upload "${{ env.RELEASE_NAME }}" dist/* --clobber || echo "::error::Failed to update existing release"
          }
      
      - name: Send Apprise Notification
        if: success()
        run: |
          curl -X POST \
          -F "tag=p" \
          -F "body=🚀 ${{ github.event.repository.name }} Release ${{ env.RELEASE_NAME }} 发布成功 #github
          
          分支: ${{ github.ref_name }}
          时间: $(date '+%Y-%m-%d %H:%M:%S')
          
          📎 相关链接
          • [仓库地址](https://github.com/${{ github.repository }})
          • [Release页面](https://github.com/${{ github.repository }}/releases/tag/${{ env.RELEASE_NAME }})" \
          "${{ secrets.APPRISE_HTTP_URL }}"