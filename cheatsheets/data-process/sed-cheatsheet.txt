##############################################################################
# sed 速查表 (sed Cheatsheet)
# https://github.com/funnyzak/cli-cheatsheets
##############################################################################

# 图例 (Legend):
#   - FILE:       文件名 (File name)
#   - PATTERN:    模式/正则表达式 (Pattern/Regular expression)
#   - REPLACEMENT: 替换文本 (Replacement text)
#   - LINE_NUM:   行号 (Line number)
#   - RANGE:      行范围 (Line range, 例如: 1,10 或 /pattern1/,/pattern2/)

##############################################################################
# 基本语法 (Basic Syntax)
##############################################################################

sed [OPTIONS] 'COMMAND' FILE                          # 基本语法格式
sed -n [OPTIONS] 'COMMAND' FILE                        # 静默模式 (只输出处理结果)
sed -i [OPTIONS] 'COMMAND' FILE                        # 直接修改文件 (in-place)
sed -e 'COMMAND1' -e 'COMMAND2' FILE                    # 执行多个命令
sed -f SCRIPT_FILE FILE                                 # 从脚本文件读取命令

##############################################################################
# 替换操作 (Substitution)
##############################################################################

sed 's/OLD/NEW/g' FILE                                 # 全局替换 (global substitution)
sed 's/OLD/NEW/' FILE                                  # 只替换每行第一次出现的
sed 's/OLD/NEW/2' FILE                                 # 只替换每行第二次出现的
sed 's/OLD/NEW/2g' FILE                                # 从第二次开始替换
sed 's/OLD/NEW/p' FILE                                 # 替换并显示替换行 (需要 -n 选项)
sed 's/OLD/NEW/w output.txt' FILE                      # 替换并写入文件

# 使用不同分隔符 (当包含路径时很有用)
sed 's|/old/path|/new/path|g' FILE                     # 使用 | 作为分隔符
sed 's#/old/path#/new/path#g' FILE                     # 使用 # 作为分隔符

# 替换中的特殊字符
sed 's/OLD/\tNEW/g' FILE                               # 插入制表符
sed 's/OLD/\nNEW/g' FILE                               # 插入换行符
sed 's/OLD/\\&NEW/g' FILE                              # 在替换中使用匹配的文本
sed 's/OLD/\1NEW/g' FILE                               # 使用捕获组

##############################################################################
# 删除操作 (Deletion)
##############################################################################

sed 'd' FILE                                           # 删除所有行
sed 'LINE_NUMd' FILE                                   # 删除指定行
sed 'START,ENDd' FILE                                  # 删除行范围
sed '/PATTERN/d' FILE                                  # 删除匹配模式的行
sed '/START_PATTERN/,/END_PATTERN/d' FILE              # 删除模式匹配的行范围
sed '1d;$d' FILE                                       # 删除第一行和最后一行
sed '/^$/d' FILE                                       # 删除空行
sed '/^\s*$/d' FILE                                    # 删除空白行 (包含空格的)
sed '5,$d' FILE                                        # 删除第5行到最后一行
sed '$d' FILE                                          # 删除最后一行

##############################################################################
# 插入和追加 (Insertion and Appending)
##############################################################################

sed 'LINE_NUMi\TEXT' FILE                              # 在指定行前插入文本
sed '/PATTERN/i\TEXT' FILE                             # 在匹配行前插入文本
sed 'LINE_NUMa\TEXT' FILE                              # 在指定行后追加文本
sed '/PATTERN/a\TEXT' FILE                             # 在匹配行后追加文本
sed 'LINE_NUMc\TEXT' FILE                              # 替换整行文本
sed '/PATTERN/c\TEXT' FILE                             # 替换匹配行为新文本

##############################################################################
# 打印操作 (Printing)
##############################################################################

sed -n 'p' FILE                                        # 打印所有行 (需要 -n)
sed -n 'LINE_NUMp' FILE                                # 打印指定行
sed -n 'START,ENDp' FILE                               # 打印行范围
sed -n '/PATTERN/p' FILE                               # 打印匹配模式的行
sed -n '/START_PATTERN/,/END_PATTERN/p' FILE           # 打印模式匹配的行范围
sed -n '$p' FILE                                       # 打印最后一行
sed -n '1,10p' FILE                                    # 打印前10行
sed -n '10,$p' FILE                                    # 打印第10行到最后一行

##############################################################################
# 行号处理 (Line Number Handling)
##############################################################################

sed '=' FILE                                           # 显示行号
sed -n 'LINE_NUM=' FILE                                # 显示指定行号
sed -n '/PATTERN/=' FILE                               # 显示匹配模式的行号

##############################################################################
# 模式空间和保持空间 (Pattern Space and Hold Space)
##############################################################################

sed 'h' FILE                                           # 将模式空间复制到保持空间
sed 'H' FILE                                           # 将模式空间追加到保持空间
sed 'g' FILE                                           # 将保持空间复制到模式空间
sed 'G' FILE                                           # 将保持空间追加到模式空间
sed 'x' FILE                                           # 交换模式空间和保持空间

##############################################################################
# 正则表达式 (Regular Expressions)
##############################################################################

sed '/^START/p' FILE                                   # 匹配行首
sed '/END$/p' FILE                                     # 匹配行尾
sed '/START.*END/p' FILE                               # 匹配包含模式
sed '/^START$/p' FILE                                  # 匹配整行
sed '/START\|END/p' FILE                               # 匹配任一模式
sed '/[0-9]/p' FILE                                    # 匹配数字
sed '/[a-zA-Z]/p' FILE                                 # 匹配字母
sed '/[^0-9]/p' FILE                                   # 匹配非数字
sed '/^$/p' FILE                                       # 匹配空行
sed '/^\s*$/p' FILE                                    # 匹配空白行

##############################################################################
# 高级替换 (Advanced Substitution)
##############################################################################

sed 's/\bWORD\b/NEW/g' FILE                            # 匹配整个单词
sed 's/^.\{1,10\}/REPLACEMENT/' FILE                   # 替换前10个字符
sed 's/\(pattern1\)\(pattern2\)/\2\1/' FILE            # 交换两个匹配组
sed 's/\(.*\)/PREFIX\1SUFFIX/' FILE                    # 为每行添加前缀和后缀
sed 's/\([^,]*\),\(.*\)/\2, \1/' FILE                  # 交换逗号分隔的字段

##############################################################################
# 多行处理 (Multi-line Processing)
##############################################################################

sed 'N;s/\n/ /' FILE                                   # 合并两行为一行
sed ':a;N;s/\n/ /;ta' FILE                             # 合并所有行为一行
sed '/START/,/END/{s/^/# /;}' FILE                    # 注释块区域
sed '/START/,/END/{s/^/# /;s/$/ # end/}' FILE          # 添加开始和结束标记

##############################################################################
# 条件处理 (Conditional Processing)
##############################################################################

sed '/PATTERN/{s/OLD1/NEW1/;s/OLD2/NEW2/;}' FILE      # 对匹配行执行多个替换
sed '/PATTERN/!d' FILE                                 # 删除不匹配的行
sed '/PATTERN1/,/PATTERN2/{/PATTERN3/d;}' FILE         # 在范围内删除匹配的行

##############################################################################
# 文件操作 (File Operations)
##############################################################################

sed -n '1,10w output.txt' FILE                         # 将前10行写入文件
sed -r '/^START/,/^END/w output.txt' FILE              # 将范围写入文件
sed 'r input.txt' FILE                                 # 在每行后读取并插入文件内容
sed '/PATTERN/r input.txt' FILE                         # 在匹配行后读取文件内容

##############################################################################
# 实用示例 (Practical Examples)
##############################################################################

# 删除注释行
sed '/^#/d' FILE
sed '/^[ \t]*#/d' FILE                                 # 删除注释行 (包含缩进的)

# 删除空白行
sed '/^$/d' FILE
sed '/^\s*$/d' FILE

# 转换大小写
sed 's/[a-z]/\U&/g' FILE                               # 转换为大写
sed 's/[A-Z]/\L&/g' FILE                               # 转换为小写

# 删除行首行尾空格
sed 's/^[ \t]*//' FILE                                 # 删除行首空格
sed 's/[ \t]*$//' FILE                                 # 删除行尾空格
sed 's/^[ \t]*//;s/[ \t]*$//' FILE                     # 删除行首行尾空格

# CSV 处理
sed 's/,/\t/g' FILE                                    # CSV 转换为 TSV
sed 's/"//g' FILE                                      # 删除引号

# 日志处理
sed 's/\[[^]]*\]//' FILE                               # 删除时间戳
sed 's/[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*//' FILE          # 删除IP地址

##############################################################################
# 性能和最佳实践 (Performance and Best Practices)
##############################################################################

# 使用 -r 或 -E 启用扩展正则表达式 (更易读)
sed -r 's/(pattern1)(pattern2)/\2\1/' FILE

# 使用 {} 块组织命令
sed '/PATTERN/{s/OLD1/NEW1/;s/OLD2/NEW2/;}' FILE

# 使用临时文件进行复杂操作
sed 's/OLD/NEW/g' FILE > temp && mv temp FILE

# 使用 sed 处理大文件时注意内存使用
sed '1q' FILE                                          # 只处理第一行 (快速)
sed '10q' FILE                                         # 只处理前10行

##############################################################################
# 调试和错误处理 (Debugging and Error Handling)
##############################################################################

sed --version                                         # 显示 sed 版本
sed --help                                            # 显示帮助信息

# 检查语法错误
sed -n 'COMMAND' /dev/null                            # 测试命令语法

# 逐步调试
sed -n 'l' FILE                                        # 显示不可见字符
sed -n 'COMMAND' FILE                                 # 先用 -n 测试结果