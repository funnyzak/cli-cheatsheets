##############################################################################
# Nmap 速查表 (Nmap Cheatsheet)
# 网络扫描器 (Network Mapper)
# https://github.com/funnyzak/cli-cheatsheets
##############################################################################

# 图例 (Legend):
#   - TARGET:  目标主机/网络 (Hostname, IP address, network range, e.g., scanme.nmap.org, 192.168.1.1, 192.168.1.0/24)
#   - PORT:    端口号 (Port number, e.g., 80, 22, 1-100, T:21-25,80, U:53,111,135, TCP:80, UDP:53)
#   - RANGE:   端口范围 (Port range, e.g., 1-1024, 1000-)
#   - PROTOCOL: 协议 (Protocol, e.g., TCP, UDP, SCTP)
#   - SCRIPT:  Nmap 脚本 (Nmap Scripting Engine script, e.g., http-headers, smb-vuln-ms08-067)
#   - FILE:    文件路径 (File path, e.g., targets.txt, ports.txt)

##############################################################################
# 基础扫描 (Basic Scanning)
##############################################################################

nmap TARGET                                   # 基本 TCP SYN 扫描 (最常用)
nmap -v TARGET                                  # 详细输出 (Verbose output)
nmap -A TARGET                                  # 综合扫描 (OS检测, 版本检测, 脚本扫描, traceroute)
nmap -F TARGET                                  # 快速扫描 (扫描常用端口)
nmap --top-ports <NUMBER> TARGET                # 扫描最常用的 <NUMBER> 个端口 (例如: --top-ports 1000)

##############################################################################
# 主机发现 (Host Discovery, Ping Scanning)
##############################################################################

nmap -sn TARGET                                 # Ping 扫描 (禁用端口扫描, 仅主机发现)
nmap -sp TARGET                                 # (已弃用, 等同于 -sn) Ping 扫描
nmap -PE TARGET                                 # ICMP Echo 请求 Ping (-PE: ICMP echo request)
nmap -PS<端口列表> TARGET                         # TCP SYN Ping (发送 SYN 包到指定端口) (例如: -PS22,80,443)
nmap -PA<端口列表> TARGET                         # TCP ACK Ping (发送 ACK 包到指定端口) (例如: -PA80,443)
nmap -PU<端口列表> TARGET                         # UDP Ping (发送 UDP 包到指定端口) (例如: -PU53,161)
nmap -PY TARGET                                 # SCTP INIT Ping (SCTP INIT ping)
nmap -PR TARGET                                 # ARP Ping (ARP ping, 局域网内快速发现)
nmap -n TARGET                                  # 无 DNS 解析 (No DNS resolution, 加速扫描)
nmap -R TARGET                                  # DNS 解析 (Resolve DNS, 默认行为)
nmap -oN <FILE> -sn TARGET                       # 将主机发现结果保存到文件 (Normal output)

# 提示:
#   - 组合使用多种 Ping 类型，提高主机发现的准确性，例如: `-PE -PS22,80,443 -PA80`
#   - 在防火墙环境下，某些 Ping 类型可能被阻止，尝试不同的 Ping 类型

##############################################################################
# 端口扫描 (Port Scanning)
##############################################################################

nmap -sS TARGET                                 # TCP SYN 扫描 (默认扫描类型, 隐蔽性好, 速度快)
nmap -sT TARGET                                 # TCP Connect 扫描 (完整 TCP 连接, 需要完成三次握手)
nmap -sU TARGET                                 # UDP 扫描 (较慢, 不可靠, 但可发现 UDP 服务)
nmap -sA TARGET                                 # TCP ACK 扫描 (用于探测防火墙规则)
nmap -sW TARGET                                 # TCP Window 扫描 (用于探测防火墙规则)
nmap -sM TARGET                                 # TCP Maimon 扫描 (用于探测防火墙规则)
nmap -sN TARGET                                 # TCP Null 扫描 (用于探测防火墙规则)
nmap -sF TARGET                                 # TCP FIN 扫描 (用于探测防火墙规则)
nmap -sX TARGET                                 # TCP Xmas 扫描 (用于探测防火墙规则)
nmap -sY TARGET                                 # SCTP INIT 扫描
nmap -sZ TARGET                                 # SCTP COOKIE-ECHO 扫描
nmap -scanflags <标志> TARGET                     # 自定义 TCP 标志扫描 (例如: -scanflags SYNACKRST)
nmap -p <端口范围> TARGET                         # 指定端口范围 (例如: -p 1-65535, -p 80,443,1-100)
nmap -p- TARGET                                 # 扫描所有 65535 个端口
nmap -p U:<端口范围>,T:<端口范围> TARGET          # 指定 TCP 和 UDP 端口范围 (例如: -p U:53,111,135, T:21-25,80)
nmap --exclude-ports <端口列表> TARGET           # 排除端口 (例如: --exclude-ports 25,139,445)
nmap -oG <FILE> -p <端口范围> TARGET             # 将端口扫描结果保存到文件 (Grepable output)

# 端口状态说明:
#   - open:  端口开放
#   - closed: 端口关闭
#   - filtered: 端口被防火墙过滤，Nmap 无法确定状态
#   - unfiltered: 端口未被过滤，但 Nmap 无法确定开放/关闭 (通常用于 ACK 扫描等)
#   - open|filtered: 端口开放或被过滤
#   - closed|filtered: 端口关闭或被过滤

##############################################################################
# 版本检测 (Version Detection)
##############################################################################

nmap -sV TARGET                                 # 版本检测 (探测服务版本信息)
nmap -sV --version-intensity <强度> TARGET      # 版本检测强度 (0-9, 强度越高越准确但越慢) (例如: --version-intensity 5)
nmap -sV --version-light TARGET                  # 轻量级版本检测 (快速)
nmap -sV --version-all TARGET                    # 全面版本检测 (慢, 但更准确)
nmap -sV --version-trace TARGET                  # 显示版本检测详细过程 (用于调试)
nmap -oX <FILE> -sV TARGET                       # 将版本检测结果保存为 XML 文件

##############################################################################
# 操作系统检测 (OS Detection)
##############################################################################

nmap -O TARGET                                 # 操作系统检测 (需要 root 权限或 sudo)
nmap -O --osscan-limit TARGET                   # 限制操作系统检测 (仅尝试探测开放和关闭的端口)
nmap -O --osscan-guess TARGET                   # 猜测操作系统 (更积极的猜测)
nmap -oA <FILE> -O TARGET                       # 将结果保存为所有格式 (Normal, XML, Grepable)

# 提示:
#   - 操作系统检测并非总是 100% 准确，结果仅供参考
#   - 使用 `-A` 参数可以同时进行 OS 检测和版本检测

##############################################################################
# Nmap 脚本引擎 (NSE - Nmap Scripting Engine)
##############################################################################

nmap --script=<脚本名> TARGET                    # 执行指定脚本 (例如: --script http-headers)
nmap --script=<脚本类别> TARGET                  # 执行指定类别的脚本 (例如: --script vuln, --script auth)
nmap --script=default TARGET                     # 执行默认脚本 (安全, 发现, 版本检测类别)
nmap --script=safe,discovery,version TARGET      # 执行多个类别脚本
nmap --script=vuln TARGET                        # 执行漏洞扫描脚本 (谨慎使用)
nmap --script=auth TARGET                        # 执行认证相关脚本
nmap --script=brute TARGET                       # 执行暴力破解脚本 (谨慎使用)
nmap --script "<脚本表达式>" TARGET              # 使用更复杂的脚本表达式 (参考 Nmap 文档)
nmap --script-args <参数> TARGET                 # 为脚本传递参数 (例如: --script-args http-useragent="MyCustomAgent")
nmap --script-args smbuser=guest,smbpass= "" --script smb-login TARGET # 为 smb-login 脚本传递用户名和密码
nmap --script-trace TARGET                      # 显示脚本执行的详细过程 (用于调试)
nmap --script-updatedb                           # 更新脚本数据库

# 常用脚本类别:
#   - default: 默认脚本 (安全, 发现, 版本检测)
#   - safe:   安全脚本 (不会对目标系统造成损害)
#   - discovery: 服务/协议发现脚本
#   - vuln:   漏洞扫描脚本 (谨慎使用)
#   - exploit:  漏洞利用脚本 (极其谨慎使用)
#   - auth:   认证相关脚本
#   - brute:  暴力破解脚本 (谨慎使用)
#   - dos:    拒绝服务攻击脚本 (禁止使用!)

# 脚本搜索:
#   - 使用 `ls /usr/share/nmap/scripts/` 或 `locate *.nse` 查看已安装的脚本
#   - 在 Nmap 官方网站查找脚本文档: https://nmap.org/nsedoc/

##############################################################################
# 防火墙/IDS 规避 (Firewall/IDS Evasion)
##############################################################################

nmap -f TARGET                                  # 分片传输 (IP fragmentation)
nmap -mtu <MTU值> TARGET                         # 指定 MTU (Maximum Transmission Unit)
nmap -D <诱饵IP1>,<诱饵IP2>,ME TARGET           # 使用诱饵 IP (Decoy IPs, ME 代表自己的 IP)
nmap -S <源IP> TARGET                            # 源地址欺骗 (Source address spoofing, 需要 root 权限或 sudo)
nmap -g <端口号> TARGET                           # 指定源端口 (Source port spoofing) (例如: -g 53)
nmap --source-port <端口号> TARGET                # 指定源端口 (另一种方式)
nmap --data-length <长度> TARGET                  # 附加随机数据 (增加包大小)
nmap --ttl <TTL值> TARGET                         # 设置 TTL (Time-to-live)
nmap --randomize-hosts TARGET                    # 主机随机排序 (对大型目标列表扫描时有用)
nmap --badsum TARGET                             # 发送错误的 TCP/UDP/SCTP 校验和的数据包 (用于探测某些老旧系统)
nmap --spoof-mac <MAC地址/前缀/0> TARGET           # MAC 地址欺骗 (Spoof MAC address)
nmap --proxies <代理列表> TARGET                  # 使用代理链 (Proxy chain, 例如: --proxies socks5://127.0.0.1:9050)
nmap --defeat-rst-ratelimit TARGET              # 击败 RST 速率限制 (某些系统可能对 RST 包限速)
nmap --host-timeout <时间> TARGET                 # 设置主机超时时间 (例如: --host-timeout 10s)
nmap --scan-delay <时间> TARGET                   # 设置扫描延迟 (例如: --scan-delay 10ms)
nmap --max-rate <数据包数/秒> TARGET              # 限制最大发包速率 (例如: --max-rate 100)
nmap --min-rate <数据包数/秒> TARGET              # 限制最小发包速率

##############################################################################
# 输出 (Output Options)
##############################################################################

nmap -oN <FILE> TARGET                           # 标准输出 (Normal output) 到文件
nmap -oX <FILE> TARGET                           # XML 输出到文件 (方便程序解析)
nmap -oG <FILE> TARGET                           # Grepable 输出到文件 (方便 grep 命令处理)
nmap -oA <FILE> TARGET                           # 输出到所有格式 (Normal, XML, Grepable) 到文件
nmap -oS <FILE> TARGET                           # Script Kiddie 输出 (娱乐性输出)
nmap -oJ <FILE> TARGET                           # JSON 输出到文件
nmap -v TARGET                                  # 详细输出 (Verbose output, 增加信息量)
nmap -vv TARGET                                 # 更详细输出 (Very verbose output)
nmap -d TARGET                                  # 调试输出 (Debug output, 显示更多内部信息)
nmap -dd TARGET                                 # 更详细调试输出
nmap --reason TARGET                             # 显示端口状态的理由 (例如: 显示 'reset' 表示端口关闭)
nmap --stats-every <时间> TARGET                  # 定期显示扫描统计信息 (例如: --stats-every 10s)
nmap --stylesheet <URL/XSL文件> -oX <FILE> TARGET # 自定义 XML 样式表
nmap --no-stylesheet -oX <FILE> TARGET          # 生成不带样式表的 XML 输出

##############################################################################
# 主机/端口指定 (Target/Port Specification)
##############################################################################

# 主机指定 (Target Specification):
#   - 直接指定 IP 地址或域名:  nmap 192.168.1.1, nmap scanme.nmap.org
#   - 网络范围 CIDR 表示法: nmap 192.168.1.0/24
#   - IP 地址范围: nmap 192.168.1.1-100
#   - 使用通配符: nmap 192.168.1.*, nmap website*.com
#   - 从文件读取目标列表: nmap -iL <FILE> (每行一个目标)
#   - 从主机列表排除目标: nmap --excludefile <FILE>
#   - 随机选择目标进行扫描: nmap -iR <数量>

# 端口指定 (Port Specification):
#   - 指定单个端口: -p 80
#   - 指定端口范围: -p 1-1024
#   - 指定多个端口: -p 80,443,8080
#   - 指定协议和端口: -p T:21-25,80, U:53,111,135
#   - 扫描所有端口: -p-
#   - 扫描常用端口: -F, --top-ports <NUMBER>

##############################################################################
# 时间和性能 (Timing and Performance)
##############################################################################

# 控制扫描速度和资源消耗，根据网络环境调整

# 时序选项 (Timing Templates, -T<0-5>):
#   - -T0 (paranoid):  极慢速，IDS 躲避，每 5 分钟发送一个包
#   - -T1 (sneaky):    慢速，IDS 躲避，每 15 秒发送一个包
#   - -T2 (polite):    礼貌模式，降低带宽消耗，降低速度
#   - -T3 (normal):    正常模式 (默认)
#   - -T4 (aggressive): 快速模式，假设网络环境良好
#   - -T5 (insane):    极速模式，可能不准确，可能导致目标系统崩溃

# 更精细的时序控制选项:
#   --min-rtt-timeout <时间>, --max-rtt-timeout <时间>, --initial-rtt-timeout <时间> (调整 RTT 超时时间)
#   --max-retries <次数> (最大重试次数)
#   --host-timeout <时间> (主机超时时间)
#   --scan-delay <时间>, --max-scan-delay <时间> (扫描延迟)
#   --min-rate <数据包数/秒>, --max-rate <数据包数/秒> (发包速率控制)
#   --defeat-rst-ratelimit (击败 RST 速率限制)
#   --max-parallelism <数量> (最大并行扫描数量)
#   --min-parallelism <数量> (最小并行扫描数量)
#   --min-hostgroup <大小>, --max-hostgroup <大小> (主机组大小控制)
#   --max-nhosts <数量> (最大扫描主机数量)

# 提示:
#   - 初学者建议使用默认的 `-T3` 或 `-T4`
#   - 在不稳定的网络环境中使用 `-T2` 或 `-T1` 降低丢包率
#   - 在高速局域网可以使用 `-T5` 加速扫描，但需谨慎

##############################################################################
# 实用技巧 (Tips and Tricks)
##############################################################################

# 扫描常见 Web 端口并进行版本检测和默认脚本扫描:
#   nmap -sV -sC -p 80,443,8080 TARGET

# 扫描 UDP 服务并进行版本检测 (UDP 扫描较慢):
#   nmap -sU -sV -p U:53,161 TARGET

# 快速扫描内网网段，发现存活主机和开放端口:
#   nmap -sn 192.168.1.0/24  # 快速发现存活主机
#   nmap -F 192.168.1.0/24   # 快速端口扫描存活主机

# 使用 NSE 脚本检测常见漏洞 (谨慎使用，请在授权环境下进行):
#   nmap --script vuln TARGET

# 使用 Grepable 输出 (-oG) 方便后续处理，例如查找开放的 80 端口:
#   nmap -oG - -p 80 TARGET | grep "80/open"

# 结合 `watch` 命令定时扫描，例如每 5 分钟扫描一次目标端口变化:
#   watch -n 300 nmap -p 22,80,443 TARGET

##############################################################################
# 示例 (Examples)
##############################################################################

# 示例 1: 扫描 scanme.nmap.org 的常用 TCP 端口，进行版本检测和默认脚本扫描，输出详细信息
#   nmap -v -sV -sC scanme.nmap.org

# 示例 2: 扫描 192.168.1.0/24 网段，仅进行主机发现 (Ping 扫描)，保存到 host-discovery.txt 文件
#   nmap -sn -oN host-discovery.txt 192.168.1.0/24

# 示例 3: 扫描 192.168.1.100 的 UDP 端口 1-1000，进行版本检测，使用 T4 加速
#   nmap -sU -sV -p 1-1000 -T4 192.168.1.100

# 示例 4: 使用 http-headers 脚本扫描目标网站
#   nmap --script http-headers www.example.com

##############################################################################
# 鸣谢 & 更多资源 (Credit & Further Resources)
##############################################################################

# Nmap 官方网站: https://nmap.org/
# Nmap 官方文档: https://nmap.org/book/
# Nmap NSE 脚本文档: https://nmap.org/nsedoc/
# Nmap Cheat Sheet by StationX: https://www.stationx.net/nmap-cheat-sheet/
# Hacking Truth Nmap Cheat Sheet: https://hackingtruth.com/nmap-cheat-sheet/

# vim: set ts=4 sw=4 tw=0 et ft=txt :
